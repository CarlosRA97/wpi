/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.10
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: wiringSerial.h

package wiringSerial

import "unsafe"
import _ "runtime/cgo"
import "sync"

var _cgo_runtime_cgocall func(unsafe.Pointer, uintptr)

type _ unsafe.Pointer

var Swig_escape_always_false bool
var Swig_escape_val interface{}

type _swig_fnptr *byte
type _swig_memberptr *byte

type _ sync.Mutex

var _wrap_Swig_free_wiringSerial_b19d29195d13eb84 unsafe.Pointer

func _swig_wrap_Swig_free(base uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_Swig_free_wiringSerial_b19d29195d13eb84, _swig_p)
	return
}

func Swig_free(arg1 uintptr) {
	_swig_wrap_Swig_free(arg1)
}

var _wrap_Swig_malloc_wiringSerial_b19d29195d13eb84 unsafe.Pointer

func Swig_malloc(arg1 int) (_swig_ret uintptr) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_Swig_malloc_wiringSerial_b19d29195d13eb84, _swig_p)
	return
}

var _wrap_serialOpen_wiringSerial_b19d29195d13eb84 unsafe.Pointer

func _swig_wrap_serialOpen(base string, _ int) (_ int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_serialOpen_wiringSerial_b19d29195d13eb84, _swig_p)
	return
}

func SerialOpen(arg1 string, arg2 int) (_swig_ret int) {
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return _swig_wrap_serialOpen(arg1, arg2)
}

var _wrap_serialClose_wiringSerial_b19d29195d13eb84 unsafe.Pointer

func _swig_wrap_serialClose(base int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_serialClose_wiringSerial_b19d29195d13eb84, _swig_p)
	return
}

func SerialClose(arg1 int) {
	_swig_wrap_serialClose(arg1)
}

var _wrap_serialFlush_wiringSerial_b19d29195d13eb84 unsafe.Pointer

func _swig_wrap_serialFlush(base int) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_serialFlush_wiringSerial_b19d29195d13eb84, _swig_p)
	return
}

func SerialFlush(arg1 int) {
	_swig_wrap_serialFlush(arg1)
}

var _wrap_serialPutchar_wiringSerial_b19d29195d13eb84 unsafe.Pointer

func _swig_wrap_serialPutchar(base int, _ byte) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_serialPutchar_wiringSerial_b19d29195d13eb84, _swig_p)
	return
}

func SerialPutchar(arg1 int, arg2 byte) {
	_swig_wrap_serialPutchar(arg1, arg2)
}

var _wrap_serialPuts_wiringSerial_b19d29195d13eb84 unsafe.Pointer

func _swig_wrap_serialPuts(base int, _ string) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_serialPuts_wiringSerial_b19d29195d13eb84, _swig_p)
	return
}

func SerialPuts(arg1 int, arg2 string) {
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	_swig_wrap_serialPuts(arg1, arg2)
}

var _wrap_serialPrintf_wiringSerial_b19d29195d13eb84 unsafe.Pointer

func _swig_wrap_serialPrintf(base int, _ string) {
	_swig_p := uintptr(unsafe.Pointer(&base))
	_cgo_runtime_cgocall(_wrap_serialPrintf_wiringSerial_b19d29195d13eb84, _swig_p)
	return
}

func SerialPrintf(arg1 int, arg2 string) {
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	_swig_wrap_serialPrintf(arg1, arg2)
}

var _wrap_serialDataAvail_wiringSerial_b19d29195d13eb84 unsafe.Pointer

func SerialDataAvail(arg1 int) (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_serialDataAvail_wiringSerial_b19d29195d13eb84, _swig_p)
	return
}

var _wrap_serialGetchar_wiringSerial_b19d29195d13eb84 unsafe.Pointer

func SerialGetchar(arg1 int) (_swig_ret int) {
	_swig_p := uintptr(unsafe.Pointer(&arg1))
	_cgo_runtime_cgocall(_wrap_serialGetchar_wiringSerial_b19d29195d13eb84, _swig_p)
	return
}

type SwigcptrVoid uintptr
type Void interface {
	Swigcptr() uintptr
}

func (p SwigcptrVoid) Swigcptr() uintptr {
	return uintptr(p)
}
